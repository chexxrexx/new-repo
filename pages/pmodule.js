import Head from "next/head";
import { initializeApp } from 'firebase/app';
import { getDatabase, ref, push, set, get, child} from 'firebase/database';
import firebaseConfig from '../firebaseConfig';

import React, { useState, useEffect } from 'react';

const app = initializeApp(firebaseConfig);
const database = getDatabase(app);

export { database }; // added
import { useFormik } from "formik";
import * as Yup from "yup";
import { useRouter } from "next/router";
import { motion as m } from "framer-motion";

async function generateBatchNumber(database) {
  const batchRef = ref(database, 'batchNumber');
  const snapshot = await get(batchRef);
  let lastBatchNumber = 0;

  if (snapshot.exists()) {
    lastBatchNumber = snapshot.val();
  }

  const newBatchNumber = lastBatchNumber + 1;
  const batchString = `DBSAF202400${newBatchNumber}`;

  // Update the batch number in the database
  await set(batchRef, newBatchNumber);

  return batchString;
}

export default function Home() {

  const [co2ePRPercent, setCo2ePRPercent] = useState('');
  const router = useRouter();

  const formik = useFormik({
    initialValues: {
      purchase_type: "Direct fuel purchase",
      network_exclusivity: "", // checkbox
      purchaseVolume: "",
      purchase_volume: "metric tons",
      purchase_cost: "",
      currency: "USD",
      purchase_date: "",
      insertion_point: "",
      insertion_date: "",
      purchase_reference: "",
      provider_entity: "",
      fuel_type: "HEFA SAF",
      energy_value: "",
      co2e_p_r: "",
      co2e_p_r_value: "94",
      co2e_p_r_percent: "",
      ISCC_RSB_Certificate_Number: "",
      feedstock: "",
      country_restricted: "", // checkbox
      country: "Finland",
      customer_restricted: "", // checkbox
    },

    onSubmit: async (values) => {
      try {
        // Generate the batch number
        const batchNumber = await generateBatchNumber(database);

        // Add the batch number to the form values
        const updatedValues = {
          ...values,
          batchNumber, // Adding batch number to values
        };
       // Create a new reference under 'entry' and save the data
       const ref1 = push(ref(database, 'entry'));  
       await set(ref1, updatedValues);

       console.log("Form submitted successfully!");
       router.push({ pathname: "/success", query: updatedValues });
     } catch (error) {
       console.error("Error saving data:", error);
     }
   },

   
    // add validation schema
  });

  useEffect(() => {
    const { co2e_p_r, co2e_p_r_value } = formik.values;

    if (co2e_p_r && co2e_p_r_value) {
      const co2ePRPercentValue = (1 - co2e_p_r / co2e_p_r_value)*100;
      formik.setFieldValue('co2e_p_r_percent', co2ePRPercentValue.toFixed(2));
    } else {
      formik.setFieldValue('co2e_p_r_percent', '');
    }
  }, [formik.values.co2e_p_r, formik.values.co2e_p_r_value]);


  return (
    <m.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="absolute w-full h-full flex items-center justify-center"
    >
      <Head>
        <title>SAF IT Tool</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex items-center justify-center w-full h-full">
        <form
          onSubmit={formik.handleSubmit}
          className="bg-white p-10 rounded-lg shadow-lg w-full max-w-lg h-screen overflow-y-auto"
        >
           {/* Purchase type input field */}
           <div className="pb-4">
              <label
                htmlFor="purchase_type"
                className={`block font-latoBold text-sm pb-2 ${
                  formik.touched.purchase_type && formik.errors.purchase_type
                    ? "text-red-400"
                    : ""
                } `}
                >
                {formik.touched.purchase_type && formik.errors.purchase_type
                  ? formik.errors.purchase_type
                  : "Purchase Type"}
              </label>
              <select 
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="purchase_type"
                onChange={formik.handleChange}
                value={formik.values.purchase_type}
              >
                <option>Direct fuel purchase</option>
                <option>Airline purchase</option>
              </select>
            </div>
            <div className="text-gray-700">
            {/* Network exclusivity input field */}
              <div className="pb-4">
                 <label
                  htmlFor="network_exclusivity"
                  className="block font-latoBold text-sm pb-2"
                  >
                Network Exclusivity
               </label>
              <div className="flex items-center space-x-4">
                <label>
              <input
                  type="radio"
                  name="network_exclusivity"
                  value="Yes"
                  onChange={formik.handleChange}
                  checked={formik.values.network_exclusivity === "Yes"}
                />
                Yes
              </label>
              <label>
              <input
                type="radio"
                name="network_exclusivity"
                value="No"
                onChange={formik.handleChange}
                checked={formik.values.network_exclusivity === "No"}
              />
              No
            </label>
            </div>
        </div>
      </div>


          <div className="text-gray-700">
            {/* Purchase volume input field*/}
            <div className="pb-4">
              <label
                htmlFor="purchase_volume"
                className={`block font-latoBold text-sm pb-2 ${
                  formik.touched.purchase_volume && formik.errors.purchase_volume
                    ? "text-red-400"
                    : ""
                } `}
              >
                {formik.touched.purchase_volume && formik.errors.purchase_volume
                  ? formik.errors.purchase_volume
                  : "Purchase Volume"}
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-7/12 focus:border-teal-500 focus:ring-teal-500"
                type="text"
                name="purchaseVolume"
                onChange={formik.handleChange}
                value={formik.values.name}
                onBlur={formik.handleBlur}
              />
              <select 
                className="border-2 border-gray-500 p-2 rounded-md w-5/12 focus:border-teal-500 focus:ring-teal-500"
                name="purchase_volume"
                onChange={formik.handleChange}
                value={formik.values.purchase_volume}
              >
                <option>metric tons</option>
                <option>liters</option>
                <option>gallons</option>
              </select>
              </div>
            {/* Purchase Cost input field */}
            <div className="pb-4">
              <label
                htmlFor="purchase_cost"
                className="block font-latoBold text-sm pb-2">
                  Purchase Cost
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="purchase_cost"
                placeholder="per metric ton"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

            {/* Currency type input field */}
           <div className="pb-4">
              <label
                htmlFor="currency"
                className="block font-latoBold text-sm pb-2"
              >
                Currency
              </label>
              <select // TODO: add placholder --select-- in grey 
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="currency"
                onChange={formik.handleChange}
                value={formik.values.currency}
              >
                <option>USD</option>
                <option>EUR</option>
              </select>
            </div>

            {/* Purchase Date input field */}
            <div className="pb-4">
              <label
                htmlFor="purchase_date"
                className="block font-latoBold text-sm pb-2">
                  Purchase Date
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="purchase_date"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

            {/* Insertion Point input field */}
            <div className="pb-4">
              <label
                htmlFor="insertion_point"
                className="block font-latoBold text-sm pb-2">
                  Insertion Point
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="insertion_point"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

            {/* Insertation date input field */}
            <div className="pb-4">
              <label
                htmlFor="insertion_date"
                className="block font-latoBold text-sm pb-2">
                  Insertion date
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="insertion_date"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

            {/* Purchase reference input field */}
            <div className="pb-4">
              <label
                htmlFor="purchase_reference"
                className="block font-latoBold text-sm pb-2">
                  Purchase Reference
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="purchase_reference"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

            {/* Provider entity input field */}
            <div className="pb-4">
              <label
                htmlFor="provider_entity"
                className="block font-latoBold text-sm pb-2">
                  Provider Entity
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="provider_entity"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

            {/* Fuel type input field */}
           <div className="pb-4">
              <label
                htmlFor="fuel_type"
                className="block font-latoBold text-sm pb-2"
              >
                Fuel Type
              </label>
              <select // TODO: add placholder --select-- in grey 
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="fuel_type"
                onChange={formik.handleChange}
                value={formik.values.fuel_type}
              >
                <option>HEFA SAF</option>
                <option>PtoL SAF</option>
              </select>
            </div>

            {/* Energy value input field */}
            <div className="pb-4">
              <label
                htmlFor="energy_value"
                className="block font-latoBold text-sm pb-2">
                  Energy Value
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="energy_value"
                placeholder = "mj per metric ton"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

            {/* CO2e Proven Reduction input field */}
            <div className="pb-4">
              <label
                htmlFor="co2e_p_r"
                className="block font-latoBold text-sm pb-2">
                  CO2e Proven Reduction 
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="co2e_p_r"
                placeholder = "Ton CO2e/ton fuel"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

             {/* co2e_p_r_value input field */}
           <div className="pb-4">
              <label
                htmlFor="co2e_p_r_value"
                className={`block font-latoBold text-sm pb-2 ${
                  formik.touched.co2e_p_r_value && formik.errors.co2e_p_r_value
                    ? "text-red-400"
                    : ""
                } `}
                >
                {formik.touched.co2e_p_r_value && formik.errors.co2e_p_r_value
                  ? formik.errors.co2e_p_r_value
                  : "Co2e percent reduction value"}
              </label>
              <select 
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="co2e_p_r_value"
                onChange={formik.handleChange}
                value={formik.values.co2e_p_r_value}
              >
                <option>94</option>
                <option>93.5</option>
                <option>89</option>
              </select>
            </div>

             {/* co2e_p_r_percent display */}
            <div className="pb-4">
             <label className="block font-latoBold text-sm pb-2">
                CO2e Percent Reduction
            </label>
             <input
                className="border-2 border-gray-500 p-2 rounded-md w-full"
                readOnly
                value={formik.values.co2e_p_r_percent}
                placeholder="Calculated Percent"
            />
            </div>

            {/* ISCC/RSB Certificate Number input field */}
            <div className="pb-4">
              <label
                htmlFor="ISCC_RSB_Certificate_Number"
                className="block font-latoBold text-sm pb-2">
                  ISCC/RSB Certificate Number
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="ISCC_RSB_Certificate_Number"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

            {/* Feedstock input field */}
            <div className="pb-4">
              <label
                htmlFor="feedstock"
                className="block font-latoBold text-sm pb-2">
                  Feedstock
              </label>
              <input
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="feedstock"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
              />
            </div>

             {/* Country Restricted input field */}
             <div className="pb-4">
                 <label
                  htmlFor="country_restricted"
                  className="block font-latoBold text-sm pb-2"
                  >
                Country Restricted
               </label>
              <div className="flex items-center space-x-4">
                <label>
              <input
                  type="radio"
                  name="country_restricted"
                  value="Yes"
                  onChange={formik.handleChange}
                  checked={formik.values.country_restricted === "Yes"}
                />
                Yes
              </label>
              <label>
              <input
                type="radio"
                name="country_restricted"
                value="No"
                onChange={formik.handleChange}
                checked={formik.values.country_restricted === "No"}
              />
              No
            </label>
            </div>
            {/* Conditionally render countries that are restricted */}
            {formik.values.country_restricted === "Yes" && (
            <div className="pb-4">
              <label
                htmlFor="country"
                className="block font-latoBold text-sm pb-2"
              >
                Country
              </label>
              <select 
                className="border-2 border-gray-500 p-2 rounded-md w-full focus:border-teal-500 focus:ring-teal-500"
                name="country"
                onChange={formik.handleChange}
                value={formik.values.country}
              >
                <option>Finland</option>  {/*add more countries*/}
                <option>France</option>
              </select>
            </div>
          )}
          </div>

        {/* Customer Restricted input field */}
        <div className="pb-4">
                 <label
                  htmlFor="customer_restricted"
                  className="block font-latoBold text-sm pb-2"
                  >
                Customer Restricted
               </label>
              <div className="flex items-center space-x-4">
                <label>
              <input
                  type="radio"
                  name="customer_restricted"
                  value="Yes"
                  onChange={formik.handleChange}
                  checked={formik.values.customer_restricted === "Yes"}
                />
                Yes
              </label>
              <label>
              <input
                type="radio"
                name="customer_restricted"
                value="No"
                onChange={formik.handleChange}
                checked={formik.values.customer_restricted === "No"}
              />
              No
            </label>
            </div>
        </div>

            <button
              type="submit"
              className="bg-teal-500 font-latoBold text-sm text-white py-3 mt-6 rounded-lg w-full"
            >
              Save
            </button>
          </div>
        </form>
      </main>
    </m.div>
  );
}

